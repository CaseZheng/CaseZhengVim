priority -10

extends c

# We want to overwrite everything in parent ft.
priority -9
###########################################################################
#                            TextMate Snippets                            #
###########################################################################
snippet ar "std::array (arr)"
std::array<${1:type}, ${2:size}> arr$0;
endsnippet

snippet li "std::list (list)"
std::list<${1:char}}> list$0;
endsnippet

snippet ma "std::map (map)"
std::map<${1:key}, ${2:value}> map$0;
endsnippet

snippet uma "std::unordered_map (umap)"
std::unordered_map<${1:key}, ${2:value}> umap$0;
endsnippet

snippet ve "std::vector (vec)"
std::vector<${1:char}> vec$0;
endsnippet

snippet se "std::set (set)"
std::set<${1:char}> set$0;
endsnippet

snippet use "std::unordered_set (uset)"
std::unordered_set<${1:char}> uset$0;
endsnippet

snippet sta "std::stack (s)"
std::stack<${1:char}> s$0;
endsnippet

snippet str "std::string (str)"
std::string str$0;
endsnippet

snippet template "template <typename ..> (template)"
template <typename ${1:_InputIter}>
endsnippet

snippet class "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`}
{
public:
	${1/(\w+).*/$1/}(${2:arguments});
	virtual ~${1/(\w+).*/$1/} ();

private:
	${0:/* data */}
};
endsnippet

snippet struct "struct .. (struct)"
struct ${1:`!p snip.rv = snip.basename or "name"`}
{
	${1/(\w+).*/$1/}(${2:arguments})
	{
	}
	${0:/* data */}
};
endsnippet

snippet namespace "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`}
{
	${VISUAL}$0
}${1/.+/ \/* /m}$1${1/.+/ *\/ /m}
endsnippet

snippet forit "for it loop"
for(std::${3:vector}<${4:char}>::iterator ${2:it}=${1:v}.begin(); $2!=$1.end(); ++$2)
{
	${VISUAL}$0
}
endsnippet

# vim:ft=snippets:
